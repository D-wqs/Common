spring:
#  datasource:
#    sqlite:
#      url: jdbc:sqlite:src\main\resources\static\yx_data.db
#  #    url: jdbc:sqlite:D:\yx_common\yx_data.db
#  #    url: jdbc:sqlite:/home/wqs/javaCommon/yx_data.db
#      driver-class-name: org.sqlite.JDBC
#      username:
#      password:
  thymeleaf:
    cache: false
    encoding: UTF-8
    mode: HTML
  rabbitmq:
    host: localhost
    port: 5672
    username: admin
    password: yunxi123$%^
## 消息队列名称
queue:
  signet: queue.signet.${random.value}

server:
  port: 8888
#  servlet:
#    context-path: /yunxi
mybatis:
  type-aliases-package: com.stamper.yx.common.entity
  mapper-locations: classpath:mapping/*.xml

config-attributes:
  uuid: 6d34ec9ac4f4338d8a1102acbe237172_7
  ignorePathList:
    - /user/login
    - /user/hello

#ok.http.connect-timeout=5
#ok.http.read-timeout=30
#ok.http.write-timeout=30
## 连接池中整体的空闲连接的最大数量
#ok.http.max-idle-connections=200
## 连接空闲时间最多为 300 秒
#ok.http.keep-alive-duration=300
#因为websocket通道的垃圾池在10s秒内关闭，超时时间不能超过10s,否则通道被关闭，系统会异常
ok:
  http:
    connect-timeout: 8
    read-timeout: 30
    write-timeout: 30
    max-idle-connections: 200
    keep-alive-duration: 300
#仅使用logging.file则输出到当前文件夹下的指定文件中
logging:
  file: common.log
# 打印SQL日志logging.level.(mapper路径)=debug
#logging:
#  level:
#    com:
#      stamper:
#        yx:
#          common:
#            mapper: debug
#是否启用rabbitMQ
#注意：配置数据源时：【driverClassName不能写成driver-class-name】【url 换成jdbc-url】
datasource:
    sqlite:
#      jdbc-url: jdbc:sqlite:src\main\resources\static\yx_data.db
      jdbc-url: jdbc:sqlite:D:/common/yx_data.db
      driver-class-name: org.sqlite.JDBC
      username:
      password:
    #多数据源：mysql
    mysql:
      jdbc-url: jdbc:mysql://localhost:3306/common?useUnicode=true&characterEncoding=utf-8
      driver-class-name: com.mysql.jdbc.Driver
      username: root
      password: root
#服务关停
openType:
  rabbit: true
  mysql: true
